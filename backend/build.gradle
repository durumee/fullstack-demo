plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.nrzm'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.5'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

def frontendType = 'vue'
def isWindows = System.properties['os.name'].toLowerCase().contains('windows')
def frontendDir = "$projectDir/../frontend-$frontendType"

task yarnBuild(type: Exec) {
    workingDir frontendDir

    if (isWindows) {
        commandLine 'cmd', '/c', 'yarn.cmd', 'cache', 'clean', '&&', 'yarn.cmd', 'build', '--no-cache'
    } else {
        commandLine 'sh', '-c', 'yarn cache clean && yarn build --no-cache'
    }

    // yarnBuild 태스크가 항상 실행되도록 설정
    outputs.upToDateWhen { false }

    // 개발 환경에서만 실행되도록 조건 추가
    // onlyIf {
    //     !project.hasProperty('prod') && !project.hasProperty('uat') && !project.hasProperty('stg')
    // }
}

// 프론트엔드 빌드 결과물을 백엔드 리소스 디렉토리로 복사하기 전에 기존 파일 삭제
task deleteFrontendBuild(type: Delete) {
    delete "$projectDir/src/main/resources/static/index.html"
    delete "$projectDir/src/main/resources/static/assets"
}

// 프론트엔드 빌드 결과물을 백엔드 리소스 디렉토리로 복사
task copyFrontendBuild(type: Copy) {
    from "$frontendDir/dist"
    into "$projectDir/src/main/resources/static"

    // 개발 환경에서만 실행되도록 조건 추가
    // onlyIf {
    //     !project.hasProperty('prod') && !project.hasProperty('uat') && !project.hasProperty('stg')
    // }
}
task prepareFrontend {
    dependsOn yarnBuild
    dependsOn deleteFrontendBuild
    dependsOn copyFrontendBuild
    deleteFrontendBuild.mustRunAfter yarnBuild
    copyFrontendBuild.mustRunAfter deleteFrontendBuild
}

classes.dependsOn prepareFrontend

bootRun {
    dependsOn prepareFrontend
}

bootJar {
    dependsOn prepareFrontend
}

processResources {
    dependsOn prepareFrontend
}